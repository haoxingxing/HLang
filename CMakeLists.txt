# CMakeList.txt: 顶层 CMake 项目文件，在此处执行全局配置
# 并包含子项目。
#
cmake_minimum_required (VERSION 3.8)
project ("HLang")
include_directories(${PROJECT_BINARY_DIR})
find_package(Git)
execute_process(COMMAND ${GIT_EXECUTABLE} describe --abbrev=6 --dirty --always --tags WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE  GIT_REPO_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE      )
execute_process(COMMAND ${GIT_EXECUTABLE} log -1 --format=%cd --date=short WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE  GIT_REPO_DATE OUTPUT_STRIP_TRAILING_WHITESPACE                    )
execute_process(COMMAND ${GIT_EXECUTABLE} log -1 --format=%H WORKING_DIRECTORY ${CMAKE_SOURCE_DIR} OUTPUT_VARIABLE  GIT_REPO_HASH_L OUTPUT_STRIP_TRAILING_WHITESPACE                                )
file(WRITE ${PROJECT_BINARY_DIR}/repo_version.h "#define REPO_VERSION \"${GIT_REPO_VERSION}\"\n#define REPO_DATE \"${GIT_REPO_DATE}\"\n#define REPO_HASH \"${GIT_REPO_HASH}\"\n"                     )
string(SUBSTRING ${GIT_REPO_HASH_L} 0 7 GIT_REPO_HASH     )
string(TOLOWER ${GIT_REPO_HASH} GIT_REPO_HASH             )
string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} ARCH             ) 
add_definitions(-DARCH=${ARCH})
set(CMAKE_CXX_STANDARD 17)
set(OUTDIR "${PROJECT_SOURCE_DIR}/build"                      )
set(EXECUTABLE_OUTPUT_PATH ${OUTDIR}                          )
set(LIBRARY_OUTPUT_PATH ${OUTDIR}                             ) 
set(CMAKE_DEBUG_POSTFIX ".${ARCH}.debug.${GIT_REPO_HASH}"     ) 
set(CMAKE_RELEASE_POSTFIX ".${ARCH}.release.${GIT_REPO_HASH}" )
message( STATUS              "PROJECT_NAME:  [ ${PROJECT_NAME} ]"           )
message( STATUS              "OURDIR:        [ ${OUTDIR} ]"                 )
message( STATUS              "ARCHITECTURES: [ ${ARCH} ]"                   )
message( STATUS              "GitRepoVer:    [ ${GIT_REPO_HASH} ]"          )
message( STATUS "File Suffix:   [ .${ARCH}.debug/release.${GIT_REPO_HASH} ]")

add_subdirectory ("HLangDLL")
